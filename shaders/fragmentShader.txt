#version 330 core

in vec3 color;
in vec3 norm;
in vec2 uv;

uniform sampler2D tex;
uniform int ligaluz;

uniform int nlights;
uniform vec3 lpos[10];
uniform vec3 lconf[10];

varying vec3 posOriginal;
varying vec4 vligthpos;



out vec4 out_Color;

void main(void){
	vec4 colort = texture2D(tex,uv);
	vec3 normnorm = normalize(norm);
	
	
	float dotres = dot(normnorm,normalize(vligthpos.xyz-posOriginal));
	
	
	if(dotres < 0.1){
		dotres += 0.1;
	}
	if(dotres>1){
		dotres = 1.0;
	}
	
	vec4 newColor = vec4(0,0,0,0);
	if(ligaluz==1){
		newColor = vec4(colort.x*dotres,colort.y*dotres,colort.z*dotres,colort.w)*vligthpos.w;
		for(int i =0; i < nlights; i++){
			vec3 delta = lpos[i].xyz-posOriginal;
			float dist = sqrt(delta.x*delta.x+delta.y*delta.y+delta.z*delta.z);
		
			if(dist<lconf[i].y){
				float vdotl = dot(normnorm,normalize(delta));
				if(vdotl<0){
					vdotl = 0;
				}
				vec4 corl = (vec4(1*vdotl,0*vdotl,0*vdotl,colort.w)*lconf[i].x)*(1-(dist/lconf[i].y));
				newColor=newColor+corl;
			}
		}
		newColor = min(newColor,vec4(1,1,1,1));
	
	}else{
		newColor = vec4(colort.x,colort.y,colort.z,colort.w);
	}
	
	if(colort.w==0){
		discard;
	}else{
		out_Color = vec4(newColor);
	}
}